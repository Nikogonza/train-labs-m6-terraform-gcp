# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



steps:
  - name: 'hashicorp/terraform:1.0.0'
    env:
      - PROD_GOOGLE_APPLICATION_CREDENTIALS=${_PROD_GOOGLE_APPLICATION_CREDENTIALS}
      - DEV_GOOGLE_APPLICATION_CREDENTIALS=${_DEV_GOOGLE_APPLICATION_CREDENTIALS}
      - PROD_TF_VARS=${_PROD_TF_VARS}
      - DEV_TF_VARS=${_DEV_TF_VARS}
      - PROD_TF_BACKEND=${_PROD_TF_BACKEND}
      - DEV_TF_BACKEND=${_DEV_TF_BACKEND}
    args:
      - '-c'
      - |
        echo "*************** TERRAFORM INIT ******************"
        echo "******* At environment: ${BRANCH_NAME} ********"
        echo "*************************************************"

        if [ "${BRANCH_NAME}" == "main" ]; then
          echo $$PROD_GOOGLE_APPLICATION_CREDENTIALS | base64 -d > credentials.json
          echo $$PROD_TF_VARS | base64 -d > terraform.tfvars

          terraform init \
            -backend-config="bucket=$$PROD_TF_BACKEND" \
            -backend-config="prefix=tf-app-prod" \
            -backend-config="credentials=./credentials.json"
          terraform workspace select prod
        fi
        if [ "${BRANCH_NAME}" == "dev" ]; then
          echo $$DEV_GOOGLE_APPLICATION_CREDENTIALS | base64 -d > credentials.json
          echo $$DEV_TF_VARS | base64 -d > terraform.tfvars
          terraform init \
            -backend-config="bucket=$$DEV_TF_BACKEND" \
            -backend-config="prefix=tf-app-dev" \
            -backend-config="credentials=./credentials.json"
          terraform workspace select dev
        fi 
    id: tf init
    entrypoint: sh
  
  - name: 'hashicorp/terraform:1.0.0'
    args:
      - '-c'
      - |
        echo "*************** TERRAFOM PLAN ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        
        terraform plan -var-file="terraform.tfvars"

    id: tf plan
    entrypoint: sh

# [END tf-plan]

# [START tf-apply]
  - id: 'tf apply'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args: 
    - '-c'
    - | 
        if [ "${BRANCH_NAME}" == "dev"  ]; then
          cd environments/$BRANCH_NAME      
          terraform apply -auto-approve
        else
          echo "***************************** SKIPPING APPLYING *******************************"
          echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
          echo "*******************************************************************************"
        fi
# [END tf-apply] 
